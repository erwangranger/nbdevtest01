# AUTOGENERATED! DO NOT EDIT! File to edit: create_model_01.ipynb (unless otherwise specified).

__all__ = ['traindata_url', 'testdata_url', 'loan_train', 'loan_test', 'loan_train_columns', 'feature_col', 'le',
           'logistic_model', 'train_features', 'x_train', 'y_train', 'x_test', 'predicted', 'filename']

# Cell
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Cell
#  Create New Variable and stores the dataset values as Data Frame

# loan_train = pd.read_csv('/kaggle/input/loan-eligible-dataset/loan-train.csv')
# loan_test = pd.read_csv('/kaggle/input/loan-eligible-dataset/loan-test.csv')

traindata_url="https://gist.githubusercontent.com/erwangranger/c1534647ecd6efc6188a92d69657f3bc/raw/eb6da3554971d9c3ab8f0506b37f285fb6453642/loans_train.csv"
testdata_url="https://gist.githubusercontent.com/erwangranger/43749b3d049b572ae83572719519cbbc/raw/47277db78d37994f8d9347265078be6619df234d/loans_test.csv"
loan_train = pd.read_csv(traindata_url)
loan_test = pd.read_csv(testdata_url)

# Cell
loan_train_columns = loan_train.columns # assign to a variable
loan_train_columns # print the list of columns

# Cell

!pip install missingno
import missingno as msno

# Cell


loan_train['Credit_History'].fillna(loan_train['Credit_History'].mode(), inplace=True) # Mode
loan_test['Credit_History'].fillna(loan_test['Credit_History'].mode(), inplace=True) # Mode


loan_train['LoanAmount'].fillna(loan_train['LoanAmount'].mean(), inplace=True) # Mean
loan_test['LoanAmount'].fillna(loan_test['LoanAmount'].mean(), inplace=True) # Mean

# Cell

loan_train.Loan_Status = loan_train.Loan_Status.replace({"Y": 1, "N" : 0})
# loan_test.Loan_Status = loan_test.Loan_Status.replace({"Y": 1, "N" : 0})

loan_train.Gender = loan_train.Gender.replace({"Male": 1, "Female" : 0})
loan_test.Gender = loan_test.Gender.replace({"Male": 1, "Female" : 0})

loan_train.Married = loan_train.Married.replace({"Yes": 1, "No" : 0})
loan_test.Married = loan_test.Married.replace({"Yes": 1, "No" : 0})

loan_train.Self_Employed = loan_train.Self_Employed.replace({"Yes": 1, "No" : 0})
loan_test.Self_Employed = loan_test.Self_Employed.replace({"Yes": 1, "No" : 0})


# Cell

loan_train['Gender'].fillna(loan_train['Gender'].mode()[0], inplace=True)
loan_test['Gender'].fillna(loan_test['Gender'].mode()[0], inplace=True)

loan_train['Dependents'].fillna(loan_train['Dependents'].mode()[0], inplace=True)
loan_test['Dependents'].fillna(loan_test['Dependents'].mode()[0], inplace=True)

loan_train['Married'].fillna(loan_train['Married'].mode()[0], inplace=True)
loan_test['Married'].fillna(loan_test['Married'].mode()[0], inplace=True)

loan_train['Credit_History'].fillna(loan_train['Credit_History'].mean(), inplace=True)
loan_test['Credit_History'].fillna(loan_test['Credit_History'].mean(), inplace=True)


# Cell

from sklearn.preprocessing import LabelEncoder
feature_col = ['Property_Area','Education', 'Dependents']
le = LabelEncoder()
for col in feature_col:
    loan_train[col] = le.fit_transform(loan_train[col])
    loan_test[col] = le.fit_transform(loan_test[col])

# Cell
# import ml model from sklearn pacakge

from sklearn.linear_model import LogisticRegression

from sklearn.metrics import accuracy_score


# Cell
logistic_model = LogisticRegression()

# Cell
train_features = ['Credit_History', 'Education', 'Gender']

x_train = loan_train[train_features].values
y_train = loan_train['Loan_Status'].values

x_test = loan_test[train_features].values


# Cell
logistic_model.fit(x_train, y_train)

# Cell
# Predict the model for testin data

predicted = logistic_model.predict(x_test)


# Cell
import pickle as pkl

# Cell
filename = 'logistic_model_01.pkl'
pkl.dump(logistic_model, open(filename, 'wb')) # wb means write as binary